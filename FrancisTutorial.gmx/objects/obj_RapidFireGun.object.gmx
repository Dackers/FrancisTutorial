<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_RapidFireGun</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 10
Owner = noone
visible = 1

SecondsBetweenShots = 0.2
SecondsSinceLastShot = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check that player exists (using id of player that was passed to Owner variable in this object's Create event initially, and later in the obj_Player/Step event))
if instance_exists(Owner)
{

    //Set weapon's location and angle to be same as owner
    x = Owner.x
    y = Owner.y
    image_angle = Owner.Facing //See Player Draw Event for description
    SecondsBetweenShots = 1 / 15 // 5 / Owner.Power  //Increases rate of fire based on Player power
    
    /* Firing */
    //Increment timer
    SecondsSinceLastShot = SecondsSinceLastShot + 1 / room_speed
    //If we're clicking mouse button AND enough time has passed to fire
    if mouse_check_button(mb_left) and SecondsSinceLastShot &gt;= SecondsBetweenShots
    {
        SecondsSinceLastShot = 0
    
        MyBullet = instance_create(x,y,obj_Bullet)
        MyBullet.direction = image_angle
        MyBullet.speed = 1000 / room_speed
        MyBullet.image_angle = image_angle
        
        Kick = 1000 / room_speed
        KickDirection = image_angle + 180
        
        //Make sure it is PLAYER that is kicked, not instance of the weapon
        //Shunt variabls are used rather than direct calls on player's x and y coords
        Owner.xShunt = lengthdir_x(Kick,KickDirection)
        Owner.yShunt = lengthdir_y(Kick,KickDirection)
        
        audio_play_sound(snd_Shoot,1,false)
    }
}

CanBePickedUp()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
