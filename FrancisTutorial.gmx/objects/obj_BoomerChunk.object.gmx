<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BoomerChunk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Projectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Setup to send bits flying out at random speed and direction */
speed = random_range(750,1500) / room_speed
direction = random(360)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We measure acceleration in speed lost per second, so room_speed factors in to it twice
Deceleration = 2000 / (room_speed * room_speed) // At 30fps this  would be a change of 50pps squared

//Bounce code
//If we're about to hit something...
if place_meeting(x + hspeed, y + vspeed, obj_Solid)
{
    //...are we about to hit something horizontally?
    if place_meeting(x + hspeed, y, obj_Solid)
    {
        //if so, bounce horizontally
        hspeed = hspeed * -1
    }
    //...are we about to hit something vertically?
    if place_meeting(x, y + vspeed, obj_Solid)
    {
        //if so, bounce vertically
        vspeed = vspeed * -1
    }
}

/* We are still flying out from the initial explosion */
if speed &gt; Deceleration
{
    /* So long as we have some speed to lose */
    //Face the direction we're going
    image_angle = direction
    //Reduce speed by deceleration
    speed = speed - Deceleration
} else
{
    /* Our speed is so low that subtracting deceleration would make it zero or negative */
    //Stop completely
    speed = 0
    //Create splats from chunks
    MySplat = instance_create(x,y,obj_BoomerSplat)
    MySplat.image_angle = image_angle
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
